// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package data is a generated GoMock package.
package data

import (
	reflect "reflect"

	v1alpha2 "github.com/devfile/api/v2/pkg/apis/workspaces/v1alpha2"
	attributes "github.com/devfile/api/v2/pkg/attributes"
	devfile "github.com/devfile/api/v2/pkg/devfile"
	common "github.com/devfile/library/pkg/devfile/parser/data/v2/common"
	gomock "github.com/golang/mock/gomock"
)

// MockDevfileData is a mock of DevfileData interface.
type MockDevfileData struct {
	ctrl     *gomock.Controller
	recorder *MockDevfileDataMockRecorder
}

// MockDevfileDataMockRecorder is the mock recorder for MockDevfileData.
type MockDevfileDataMockRecorder struct {
	mock *MockDevfileData
}

// NewMockDevfileData creates a new mock instance.
func NewMockDevfileData(ctrl *gomock.Controller) *MockDevfileData {
	mock := &MockDevfileData{ctrl: ctrl}
	mock.recorder = &MockDevfileDataMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDevfileData) EXPECT() *MockDevfileDataMockRecorder {
	return m.recorder
}

// AddAttributes mocks base method.
func (m *MockDevfileData) AddAttributes(key string, value interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddAttributes", key, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddAttributes indicates an expected call of AddAttributes.
func (mr *MockDevfileDataMockRecorder) AddAttributes(key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddAttributes", reflect.TypeOf((*MockDevfileData)(nil).AddAttributes), key, value)
}

// AddCommands mocks base method.
func (m *MockDevfileData) AddCommands(commands []v1alpha2.Command) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddCommands", commands)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddCommands indicates an expected call of AddCommands.
func (mr *MockDevfileDataMockRecorder) AddCommands(commands interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddCommands", reflect.TypeOf((*MockDevfileData)(nil).AddCommands), commands)
}

// AddComponents mocks base method.
func (m *MockDevfileData) AddComponents(components []v1alpha2.Component) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddComponents", components)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddComponents indicates an expected call of AddComponents.
func (mr *MockDevfileDataMockRecorder) AddComponents(components interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddComponents", reflect.TypeOf((*MockDevfileData)(nil).AddComponents), components)
}

// AddEvents mocks base method.
func (m *MockDevfileData) AddEvents(events v1alpha2.Events) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddEvents", events)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddEvents indicates an expected call of AddEvents.
func (mr *MockDevfileDataMockRecorder) AddEvents(events interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEvents", reflect.TypeOf((*MockDevfileData)(nil).AddEvents), events)
}

// AddProjects mocks base method.
func (m *MockDevfileData) AddProjects(projects []v1alpha2.Project) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddProjects", projects)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddProjects indicates an expected call of AddProjects.
func (mr *MockDevfileDataMockRecorder) AddProjects(projects interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddProjects", reflect.TypeOf((*MockDevfileData)(nil).AddProjects), projects)
}

// AddStarterProjects mocks base method.
func (m *MockDevfileData) AddStarterProjects(projects []v1alpha2.StarterProject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddStarterProjects", projects)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddStarterProjects indicates an expected call of AddStarterProjects.
func (mr *MockDevfileDataMockRecorder) AddStarterProjects(projects interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddStarterProjects", reflect.TypeOf((*MockDevfileData)(nil).AddStarterProjects), projects)
}

// AddVolumeMounts mocks base method.
func (m *MockDevfileData) AddVolumeMounts(containerName string, volumeMounts []v1alpha2.VolumeMount) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddVolumeMounts", containerName, volumeMounts)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddVolumeMounts indicates an expected call of AddVolumeMounts.
func (mr *MockDevfileDataMockRecorder) AddVolumeMounts(containerName, volumeMounts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddVolumeMounts", reflect.TypeOf((*MockDevfileData)(nil).AddVolumeMounts), containerName, volumeMounts)
}

// DeleteCommand mocks base method.
func (m *MockDevfileData) DeleteCommand(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCommand", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCommand indicates an expected call of DeleteCommand.
func (mr *MockDevfileDataMockRecorder) DeleteCommand(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCommand", reflect.TypeOf((*MockDevfileData)(nil).DeleteCommand), id)
}

// DeleteComponent mocks base method.
func (m *MockDevfileData) DeleteComponent(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteComponent", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteComponent indicates an expected call of DeleteComponent.
func (mr *MockDevfileDataMockRecorder) DeleteComponent(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteComponent", reflect.TypeOf((*MockDevfileData)(nil).DeleteComponent), name)
}

// DeleteProject mocks base method.
func (m *MockDevfileData) DeleteProject(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProject", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteProject indicates an expected call of DeleteProject.
func (mr *MockDevfileDataMockRecorder) DeleteProject(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProject", reflect.TypeOf((*MockDevfileData)(nil).DeleteProject), name)
}

// DeleteStarterProject mocks base method.
func (m *MockDevfileData) DeleteStarterProject(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStarterProject", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStarterProject indicates an expected call of DeleteStarterProject.
func (mr *MockDevfileDataMockRecorder) DeleteStarterProject(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStarterProject", reflect.TypeOf((*MockDevfileData)(nil).DeleteStarterProject), name)
}

// DeleteVolumeMount mocks base method.
func (m *MockDevfileData) DeleteVolumeMount(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVolumeMount", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVolumeMount indicates an expected call of DeleteVolumeMount.
func (mr *MockDevfileDataMockRecorder) DeleteVolumeMount(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVolumeMount", reflect.TypeOf((*MockDevfileData)(nil).DeleteVolumeMount), name)
}

// GetAttributes mocks base method.
func (m *MockDevfileData) GetAttributes() (attributes.Attributes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAttributes")
	ret0, _ := ret[0].(attributes.Attributes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAttributes indicates an expected call of GetAttributes.
func (mr *MockDevfileDataMockRecorder) GetAttributes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAttributes", reflect.TypeOf((*MockDevfileData)(nil).GetAttributes))
}

// GetCommands mocks base method.
func (m *MockDevfileData) GetCommands(arg0 common.DevfileOptions) ([]v1alpha2.Command, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCommands", arg0)
	ret0, _ := ret[0].([]v1alpha2.Command)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCommands indicates an expected call of GetCommands.
func (mr *MockDevfileDataMockRecorder) GetCommands(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCommands", reflect.TypeOf((*MockDevfileData)(nil).GetCommands), arg0)
}

// GetComponents mocks base method.
func (m *MockDevfileData) GetComponents(arg0 common.DevfileOptions) ([]v1alpha2.Component, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetComponents", arg0)
	ret0, _ := ret[0].([]v1alpha2.Component)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetComponents indicates an expected call of GetComponents.
func (mr *MockDevfileDataMockRecorder) GetComponents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetComponents", reflect.TypeOf((*MockDevfileData)(nil).GetComponents), arg0)
}

// GetDevfileContainerComponents mocks base method.
func (m *MockDevfileData) GetDevfileContainerComponents(arg0 common.DevfileOptions) ([]v1alpha2.Component, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDevfileContainerComponents", arg0)
	ret0, _ := ret[0].([]v1alpha2.Component)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDevfileContainerComponents indicates an expected call of GetDevfileContainerComponents.
func (mr *MockDevfileDataMockRecorder) GetDevfileContainerComponents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDevfileContainerComponents", reflect.TypeOf((*MockDevfileData)(nil).GetDevfileContainerComponents), arg0)
}

// GetDevfileVolumeComponents mocks base method.
func (m *MockDevfileData) GetDevfileVolumeComponents(arg0 common.DevfileOptions) ([]v1alpha2.Component, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDevfileVolumeComponents", arg0)
	ret0, _ := ret[0].([]v1alpha2.Component)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDevfileVolumeComponents indicates an expected call of GetDevfileVolumeComponents.
func (mr *MockDevfileDataMockRecorder) GetDevfileVolumeComponents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDevfileVolumeComponents", reflect.TypeOf((*MockDevfileData)(nil).GetDevfileVolumeComponents), arg0)
}

// GetDevfileWorkspaceSpec mocks base method.
func (m *MockDevfileData) GetDevfileWorkspaceSpec() *v1alpha2.DevWorkspaceTemplateSpec {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDevfileWorkspaceSpec")
	ret0, _ := ret[0].(*v1alpha2.DevWorkspaceTemplateSpec)
	return ret0
}

// GetDevfileWorkspaceSpec indicates an expected call of GetDevfileWorkspaceSpec.
func (mr *MockDevfileDataMockRecorder) GetDevfileWorkspaceSpec() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDevfileWorkspaceSpec", reflect.TypeOf((*MockDevfileData)(nil).GetDevfileWorkspaceSpec))
}

// GetDevfileWorkspaceSpecContent mocks base method.
func (m *MockDevfileData) GetDevfileWorkspaceSpecContent() *v1alpha2.DevWorkspaceTemplateSpecContent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDevfileWorkspaceSpecContent")
	ret0, _ := ret[0].(*v1alpha2.DevWorkspaceTemplateSpecContent)
	return ret0
}

// GetDevfileWorkspaceSpecContent indicates an expected call of GetDevfileWorkspaceSpecContent.
func (mr *MockDevfileDataMockRecorder) GetDevfileWorkspaceSpecContent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDevfileWorkspaceSpecContent", reflect.TypeOf((*MockDevfileData)(nil).GetDevfileWorkspaceSpecContent))
}

// GetEvents mocks base method.
func (m *MockDevfileData) GetEvents() v1alpha2.Events {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEvents")
	ret0, _ := ret[0].(v1alpha2.Events)
	return ret0
}

// GetEvents indicates an expected call of GetEvents.
func (mr *MockDevfileDataMockRecorder) GetEvents() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEvents", reflect.TypeOf((*MockDevfileData)(nil).GetEvents))
}

// GetMetadata mocks base method.
func (m *MockDevfileData) GetMetadata() devfile.DevfileMetadata {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata")
	ret0, _ := ret[0].(devfile.DevfileMetadata)
	return ret0
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockDevfileDataMockRecorder) GetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockDevfileData)(nil).GetMetadata))
}

// GetParent mocks base method.
func (m *MockDevfileData) GetParent() *v1alpha2.Parent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParent")
	ret0, _ := ret[0].(*v1alpha2.Parent)
	return ret0
}

// GetParent indicates an expected call of GetParent.
func (mr *MockDevfileDataMockRecorder) GetParent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParent", reflect.TypeOf((*MockDevfileData)(nil).GetParent))
}

// GetProjects mocks base method.
func (m *MockDevfileData) GetProjects(arg0 common.DevfileOptions) ([]v1alpha2.Project, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProjects", arg0)
	ret0, _ := ret[0].([]v1alpha2.Project)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProjects indicates an expected call of GetProjects.
func (mr *MockDevfileDataMockRecorder) GetProjects(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProjects", reflect.TypeOf((*MockDevfileData)(nil).GetProjects), arg0)
}

// GetSchemaVersion mocks base method.
func (m *MockDevfileData) GetSchemaVersion() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSchemaVersion")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSchemaVersion indicates an expected call of GetSchemaVersion.
func (mr *MockDevfileDataMockRecorder) GetSchemaVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSchemaVersion", reflect.TypeOf((*MockDevfileData)(nil).GetSchemaVersion))
}

// GetStarterProjects mocks base method.
func (m *MockDevfileData) GetStarterProjects(arg0 common.DevfileOptions) ([]v1alpha2.StarterProject, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStarterProjects", arg0)
	ret0, _ := ret[0].([]v1alpha2.StarterProject)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStarterProjects indicates an expected call of GetStarterProjects.
func (mr *MockDevfileDataMockRecorder) GetStarterProjects(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStarterProjects", reflect.TypeOf((*MockDevfileData)(nil).GetStarterProjects), arg0)
}

// GetVolumeMountPaths mocks base method.
func (m *MockDevfileData) GetVolumeMountPaths(mountName, containerName string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVolumeMountPaths", mountName, containerName)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVolumeMountPaths indicates an expected call of GetVolumeMountPaths.
func (mr *MockDevfileDataMockRecorder) GetVolumeMountPaths(mountName, containerName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVolumeMountPaths", reflect.TypeOf((*MockDevfileData)(nil).GetVolumeMountPaths), mountName, containerName)
}

// SetDevfileWorkspaceSpec mocks base method.
func (m *MockDevfileData) SetDevfileWorkspaceSpec(spec v1alpha2.DevWorkspaceTemplateSpec) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDevfileWorkspaceSpec", spec)
}

// SetDevfileWorkspaceSpec indicates an expected call of SetDevfileWorkspaceSpec.
func (mr *MockDevfileDataMockRecorder) SetDevfileWorkspaceSpec(spec interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDevfileWorkspaceSpec", reflect.TypeOf((*MockDevfileData)(nil).SetDevfileWorkspaceSpec), spec)
}

// SetDevfileWorkspaceSpecContent mocks base method.
func (m *MockDevfileData) SetDevfileWorkspaceSpecContent(content v1alpha2.DevWorkspaceTemplateSpecContent) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDevfileWorkspaceSpecContent", content)
}

// SetDevfileWorkspaceSpecContent indicates an expected call of SetDevfileWorkspaceSpecContent.
func (mr *MockDevfileDataMockRecorder) SetDevfileWorkspaceSpecContent(content interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDevfileWorkspaceSpecContent", reflect.TypeOf((*MockDevfileData)(nil).SetDevfileWorkspaceSpecContent), content)
}

// SetMetadata mocks base method.
func (m *MockDevfileData) SetMetadata(metadata devfile.DevfileMetadata) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetMetadata", metadata)
}

// SetMetadata indicates an expected call of SetMetadata.
func (mr *MockDevfileDataMockRecorder) SetMetadata(metadata interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMetadata", reflect.TypeOf((*MockDevfileData)(nil).SetMetadata), metadata)
}

// SetParent mocks base method.
func (m *MockDevfileData) SetParent(parent *v1alpha2.Parent) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetParent", parent)
}

// SetParent indicates an expected call of SetParent.
func (mr *MockDevfileDataMockRecorder) SetParent(parent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetParent", reflect.TypeOf((*MockDevfileData)(nil).SetParent), parent)
}

// SetSchemaVersion mocks base method.
func (m *MockDevfileData) SetSchemaVersion(version string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSchemaVersion", version)
}

// SetSchemaVersion indicates an expected call of SetSchemaVersion.
func (mr *MockDevfileDataMockRecorder) SetSchemaVersion(version interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSchemaVersion", reflect.TypeOf((*MockDevfileData)(nil).SetSchemaVersion), version)
}

// UpdateAttributes mocks base method.
func (m *MockDevfileData) UpdateAttributes(key string, value interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAttributes", key, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAttributes indicates an expected call of UpdateAttributes.
func (mr *MockDevfileDataMockRecorder) UpdateAttributes(key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAttributes", reflect.TypeOf((*MockDevfileData)(nil).UpdateAttributes), key, value)
}

// UpdateCommand mocks base method.
func (m *MockDevfileData) UpdateCommand(command v1alpha2.Command) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCommand", command)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCommand indicates an expected call of UpdateCommand.
func (mr *MockDevfileDataMockRecorder) UpdateCommand(command interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCommand", reflect.TypeOf((*MockDevfileData)(nil).UpdateCommand), command)
}

// UpdateComponent mocks base method.
func (m *MockDevfileData) UpdateComponent(component v1alpha2.Component) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateComponent", component)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateComponent indicates an expected call of UpdateComponent.
func (mr *MockDevfileDataMockRecorder) UpdateComponent(component interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateComponent", reflect.TypeOf((*MockDevfileData)(nil).UpdateComponent), component)
}

// UpdateEvents mocks base method.
func (m *MockDevfileData) UpdateEvents(postStart, postStop, preStart, preStop []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateEvents", postStart, postStop, preStart, preStop)
}

// UpdateEvents indicates an expected call of UpdateEvents.
func (mr *MockDevfileDataMockRecorder) UpdateEvents(postStart, postStop, preStart, preStop interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEvents", reflect.TypeOf((*MockDevfileData)(nil).UpdateEvents), postStart, postStop, preStart, preStop)
}

// UpdateProject mocks base method.
func (m *MockDevfileData) UpdateProject(project v1alpha2.Project) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProject", project)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateProject indicates an expected call of UpdateProject.
func (mr *MockDevfileDataMockRecorder) UpdateProject(project interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProject", reflect.TypeOf((*MockDevfileData)(nil).UpdateProject), project)
}

// UpdateStarterProject mocks base method.
func (m *MockDevfileData) UpdateStarterProject(project v1alpha2.StarterProject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStarterProject", project)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateStarterProject indicates an expected call of UpdateStarterProject.
func (mr *MockDevfileDataMockRecorder) UpdateStarterProject(project interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStarterProject", reflect.TypeOf((*MockDevfileData)(nil).UpdateStarterProject), project)
}

// RemoveEnvVars mocks base method
func (m *MockDevfileData) RemoveEnvVars(containerEnvMap map[string][]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveEnvVars", containerEnvMap)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveEnvVars indicates an expected call of RemoveEnvVars
func (mr *MockDevfileDataMockRecorder) RemoveEnvVars(containerEnvMap interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveEnvVars", reflect.TypeOf((*MockDevfileData)(nil).RemoveEnvVars), containerEnvMap)
}

// SetPorts mocks base method
func (m *MockDevfileData) SetPorts(containerPortsMap map[string][]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetPorts", containerPortsMap)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetPorts indicates an expected call of SetPorts
func (mr *MockDevfileDataMockRecorder) SetPorts(containerPortsMap interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPorts", reflect.TypeOf((*MockDevfileData)(nil).SetPorts), containerPortsMap)
}

// AddEnvVars mocks base method
func (m *MockDevfileData) AddEnvVars(containerEnvMap map[string][]v1alpha2.EnvVar) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddEnvVars", containerEnvMap)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddEnvVars indicates an expected call of AddEnvVars
func (mr *MockDevfileDataMockRecorder) AddEnvVars(containerEnvMap interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEnvVars", reflect.TypeOf((*MockDevfileData)(nil).AddEnvVars), containerEnvMap)
}

// RemovePorts mocks base method
func (m *MockDevfileData) RemovePorts(containerPortsMap map[string][]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemovePorts", containerPortsMap)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemovePorts indicates an expected call of RemovePorts
func (mr *MockDevfileDataMockRecorder) RemovePorts(containerPortsMap interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemovePorts", reflect.TypeOf((*MockDevfileData)(nil).RemovePorts), containerPortsMap)
}
