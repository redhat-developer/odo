"use strict";(self.webpackChunkdevfile_builder=self.webpackChunkdevfile_builder||[]).push([[44],{8044:(tt,ue,Y)=>{Y.r(ue),Y.d(ue,{diagram:()=>Qe});var p=Y(9037),we=Y(8586),ne=(Y(1764),Y(6780),Y(2735),function(){var r=function(I,o,u,k){for(u=u||{},k=I.length;k--;u[I[k]]=o);return u},n=[1,3],l=[1,6],h=[1,4],i=[1,5],c=[2,5],b=[1,12],m=[5,7,13,19,21,23,24,26,28,31,37,40,47],y=[7,13,19,21,23,24,26,28,31,37,40],_=[7,12,13,19,21,23,24,26,28,31,37,40],a=[7,13,47],v=[1,42],E=[1,41],g=[7,13,29,32,35,38,47],f=[1,55],x=[1,56],d=[1,57],T=[7,13,32,35,42,47],D={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,PARENT_COMMIT:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,ID:46,";":47,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"PARENT_COMMIT",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",46:"ID",47:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,5],[18,7],[18,7],[18,5],[18,5],[18,5],[18,7],[18,7],[18,7],[18,7],[17,2],[17,4],[17,4],[17,4],[17,6],[17,6],[17,6],[17,6],[17,6],[17,6],[17,8],[17,8],[17,8],[17,8],[17,8],[17,8],[16,2],[16,3],[16,3],[16,5],[16,5],[16,3],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,3],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[41,0],[41,1],[39,1],[39,1],[39,1],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:function(o,u,k,s,w,e,ee){var t=e.length-1;switch(w){case 2:return e[t];case 3:return e[t-1];case 4:return s.setDirection(e[t-3]),e[t-1];case 6:s.setOptions(e[t-1]),this.$=e[t];break;case 7:e[t-1]+=e[t],this.$=e[t-1];break;case 9:this.$=[];break;case 10:e[t-1].push(e[t]),this.$=e[t-1];break;case 11:this.$=e[t-1];break;case 16:this.$=e[t].trim(),s.setAccTitle(this.$);break;case 17:case 18:this.$=e[t].trim(),s.setAccDescription(this.$);break;case 19:s.addSection(e[t].substr(8)),this.$=e[t].substr(8);break;case 21:s.checkout(e[t]);break;case 22:s.branch(e[t]);break;case 23:s.branch(e[t-2],e[t]);break;case 24:s.cherryPick(e[t],"",void 0);break;case 25:s.cherryPick(e[t-2],"",void 0,e[t]);break;case 26:s.cherryPick(e[t-2],"",e[t]);break;case 27:s.cherryPick(e[t-4],"",e[t],e[t-2]);break;case 28:s.cherryPick(e[t-4],"",e[t-2],e[t]);break;case 29:s.cherryPick(e[t],"",e[t-2]);break;case 30:s.cherryPick(e[t],"","");break;case 31:s.cherryPick(e[t-2],"","");break;case 32:s.cherryPick(e[t-4],"","",e[t-2]);break;case 33:s.cherryPick(e[t-4],"","",e[t]);break;case 34:s.cherryPick(e[t-2],"",e[t-4],e[t]);break;case 35:s.cherryPick(e[t-2],"","",e[t]);break;case 36:s.merge(e[t],"","","");break;case 37:s.merge(e[t-2],e[t],"","");break;case 38:s.merge(e[t-2],"",e[t],"");break;case 39:s.merge(e[t-2],"","",e[t]);break;case 40:s.merge(e[t-4],e[t],"",e[t-2]);break;case 41:s.merge(e[t-4],"",e[t],e[t-2]);break;case 42:s.merge(e[t-4],"",e[t-2],e[t]);break;case 43:s.merge(e[t-4],e[t-2],e[t],"");break;case 44:s.merge(e[t-4],e[t-2],"",e[t]);break;case 45:s.merge(e[t-4],e[t],e[t-2],"");break;case 46:s.merge(e[t-6],e[t-4],e[t-2],e[t]);break;case 47:s.merge(e[t-6],e[t],e[t-4],e[t-2]);break;case 48:s.merge(e[t-6],e[t-4],e[t],e[t-2]);break;case 49:s.merge(e[t-6],e[t-2],e[t-4],e[t]);break;case 50:s.merge(e[t-6],e[t],e[t-2],e[t-4]);break;case 51:s.merge(e[t-6],e[t-2],e[t],e[t-4]);break;case 52:s.commit(e[t]);break;case 53:s.commit("","",s.commitType.NORMAL,e[t]);break;case 54:s.commit("","",e[t],"");break;case 55:s.commit("","",e[t],e[t-2]);break;case 56:s.commit("","",e[t-2],e[t]);break;case 57:s.commit("",e[t],s.commitType.NORMAL,"");break;case 58:s.commit("",e[t-2],s.commitType.NORMAL,e[t]);break;case 59:s.commit("",e[t],s.commitType.NORMAL,e[t-2]);break;case 60:s.commit("",e[t-2],e[t],"");break;case 61:s.commit("",e[t],e[t-2],"");break;case 62:s.commit("",e[t-4],e[t-2],e[t]);break;case 63:s.commit("",e[t-4],e[t],e[t-2]);break;case 64:s.commit("",e[t-2],e[t-4],e[t]);break;case 65:s.commit("",e[t],e[t-4],e[t-2]);break;case 66:s.commit("",e[t],e[t-2],e[t-4]);break;case 67:s.commit("",e[t-2],e[t],e[t-4]);break;case 68:s.commit(e[t],"",s.commitType.NORMAL,"");break;case 69:s.commit(e[t],"",s.commitType.NORMAL,e[t-2]);break;case 70:s.commit(e[t-2],"",s.commitType.NORMAL,e[t]);break;case 71:s.commit(e[t-2],"",e[t],"");break;case 72:s.commit(e[t],"",e[t-2],"");break;case 73:s.commit(e[t],e[t-2],s.commitType.NORMAL,"");break;case 74:s.commit(e[t-2],e[t],s.commitType.NORMAL,"");break;case 75:s.commit(e[t-4],"",e[t-2],e[t]);break;case 76:s.commit(e[t-4],"",e[t],e[t-2]);break;case 77:s.commit(e[t-2],"",e[t-4],e[t]);break;case 78:s.commit(e[t],"",e[t-4],e[t-2]);break;case 79:s.commit(e[t],"",e[t-2],e[t-4]);break;case 80:s.commit(e[t-2],"",e[t],e[t-4]);break;case 81:s.commit(e[t-4],e[t],e[t-2],"");break;case 82:s.commit(e[t-4],e[t-2],e[t],"");break;case 83:s.commit(e[t-2],e[t],e[t-4],"");break;case 84:s.commit(e[t],e[t-2],e[t-4],"");break;case 85:s.commit(e[t],e[t-4],e[t-2],"");break;case 86:s.commit(e[t-2],e[t-4],e[t],"");break;case 87:s.commit(e[t-4],e[t],s.commitType.NORMAL,e[t-2]);break;case 88:s.commit(e[t-4],e[t-2],s.commitType.NORMAL,e[t]);break;case 89:s.commit(e[t-2],e[t],s.commitType.NORMAL,e[t-4]);break;case 90:s.commit(e[t],e[t-2],s.commitType.NORMAL,e[t-4]);break;case 91:s.commit(e[t],e[t-4],s.commitType.NORMAL,e[t-2]);break;case 92:s.commit(e[t-2],e[t-4],s.commitType.NORMAL,e[t]);break;case 93:s.commit(e[t-6],e[t-4],e[t-2],e[t]);break;case 94:s.commit(e[t-6],e[t-4],e[t],e[t-2]);break;case 95:s.commit(e[t-6],e[t-2],e[t-4],e[t]);break;case 96:s.commit(e[t-6],e[t],e[t-4],e[t-2]);break;case 97:s.commit(e[t-6],e[t-2],e[t],e[t-4]);break;case 98:s.commit(e[t-6],e[t],e[t-2],e[t-4]);break;case 99:s.commit(e[t-4],e[t-6],e[t-2],e[t]);break;case 100:s.commit(e[t-4],e[t-6],e[t],e[t-2]);break;case 101:s.commit(e[t-2],e[t-6],e[t-4],e[t]);break;case 102:s.commit(e[t],e[t-6],e[t-4],e[t-2]);break;case 103:s.commit(e[t-2],e[t-6],e[t],e[t-4]);break;case 104:s.commit(e[t],e[t-6],e[t-2],e[t-4]);break;case 105:s.commit(e[t],e[t-4],e[t-2],e[t-6]);break;case 106:s.commit(e[t-2],e[t-4],e[t],e[t-6]);break;case 107:s.commit(e[t],e[t-2],e[t-4],e[t-6]);break;case 108:s.commit(e[t-2],e[t],e[t-4],e[t-6]);break;case 109:s.commit(e[t-4],e[t-2],e[t],e[t-6]);break;case 110:s.commit(e[t-4],e[t],e[t-2],e[t-6]);break;case 111:s.commit(e[t-2],e[t-4],e[t-6],e[t]);break;case 112:s.commit(e[t],e[t-4],e[t-6],e[t-2]);break;case 113:s.commit(e[t-2],e[t],e[t-6],e[t-4]);break;case 114:s.commit(e[t],e[t-2],e[t-6],e[t-4]);break;case 115:s.commit(e[t-4],e[t-2],e[t-6],e[t]);break;case 116:s.commit(e[t-4],e[t],e[t-6],e[t-2]);break;case 117:this.$="";break;case 118:this.$=e[t];break;case 119:this.$=s.commitType.NORMAL;break;case 120:this.$=s.commitType.REVERSE;break;case 121:this.$=s.commitType.HIGHLIGHT}},table:[{3:1,4:2,5:n,7:l,13:h,47:i},{1:[3]},{3:7,4:2,5:n,7:l,13:h,47:i},{6:8,7:c,8:[1,9],9:[1,10],10:11,13:b},r(m,[2,124]),r(m,[2,125]),r(m,[2,126]),{1:[2,1]},{7:[1,13]},{6:14,7:c,10:11,13:b},{8:[1,15]},r(y,[2,9],{11:16,12:[1,17]}),r(_,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:c,10:11,13:b},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],37:[1,33],40:[1,32]},r(_,[2,7]),{1:[2,3]},{7:[1,36]},r(y,[2,10]),{4:37,7:l,13:h,47:i},r(y,[2,12]),r(a,[2,13]),r(a,[2,14]),r(a,[2,15]),{20:[1,38]},{22:[1,39]},r(a,[2,18]),r(a,[2,19]),r(a,[2,20]),{27:40,33:v,46:E},r(a,[2,117],{41:43,32:[1,46],33:[1,48],35:[1,44],38:[1,45],42:[1,47]}),{27:49,33:v,46:E},{32:[1,50],35:[1,51]},{27:52,33:v,46:E},{1:[2,4]},r(y,[2,11]),r(a,[2,16]),r(a,[2,17]),r(a,[2,21]),r(g,[2,122]),r(g,[2,123]),r(a,[2,52]),{33:[1,53]},{39:54,43:f,44:x,45:d},{33:[1,58]},{33:[1,59]},r(a,[2,118]),r(a,[2,36],{32:[1,60],35:[1,62],38:[1,61]}),{33:[1,63]},{33:[1,64],36:[1,65]},r(a,[2,22],{29:[1,66]}),r(a,[2,53],{32:[1,68],38:[1,67],42:[1,69]}),r(a,[2,54],{32:[1,71],35:[1,70],42:[1,72]}),r(T,[2,119]),r(T,[2,120]),r(T,[2,121]),r(a,[2,57],{35:[1,73],38:[1,74],42:[1,75]}),r(a,[2,68],{32:[1,78],35:[1,76],38:[1,77]}),{33:[1,79]},{39:80,43:f,44:x,45:d},{33:[1,81]},r(a,[2,24],{34:[1,82],35:[1,83]}),{32:[1,84]},{32:[1,85]},{30:[1,86]},{39:87,43:f,44:x,45:d},{33:[1,88]},{33:[1,89]},{33:[1,90]},{33:[1,91]},{33:[1,92]},{33:[1,93]},{39:94,43:f,44:x,45:d},{33:[1,95]},{33:[1,96]},{39:97,43:f,44:x,45:d},{33:[1,98]},r(a,[2,37],{35:[1,100],38:[1,99]}),r(a,[2,38],{32:[1,102],35:[1,101]}),r(a,[2,39],{32:[1,103],38:[1,104]}),{33:[1,105]},{33:[1,106],36:[1,107]},{33:[1,108]},{33:[1,109]},r(a,[2,23]),r(a,[2,55],{32:[1,110],42:[1,111]}),r(a,[2,59],{38:[1,112],42:[1,113]}),r(a,[2,69],{32:[1,115],38:[1,114]}),r(a,[2,56],{32:[1,116],42:[1,117]}),r(a,[2,61],{35:[1,118],42:[1,119]}),r(a,[2,72],{32:[1,121],35:[1,120]}),r(a,[2,58],{38:[1,122],42:[1,123]}),r(a,[2,60],{35:[1,124],42:[1,125]}),r(a,[2,73],{35:[1,127],38:[1,126]}),r(a,[2,70],{32:[1,129],38:[1,128]}),r(a,[2,71],{32:[1,131],35:[1,130]}),r(a,[2,74],{35:[1,133],38:[1,132]}),{39:134,43:f,44:x,45:d},{33:[1,135]},{33:[1,136]},{33:[1,137]},{33:[1,138]},{39:139,43:f,44:x,45:d},r(a,[2,25],{35:[1,140]}),r(a,[2,26],{34:[1,141]}),r(a,[2,31],{34:[1,142]}),r(a,[2,29],{34:[1,143]}),r(a,[2,30],{34:[1,144]}),{33:[1,145]},{33:[1,146]},{39:147,43:f,44:x,45:d},{33:[1,148]},{39:149,43:f,44:x,45:d},{33:[1,150]},{33:[1,151]},{33:[1,152]},{33:[1,153]},{33:[1,154]},{33:[1,155]},{33:[1,156]},{39:157,43:f,44:x,45:d},{33:[1,158]},{33:[1,159]},{33:[1,160]},{39:161,43:f,44:x,45:d},{33:[1,162]},{39:163,43:f,44:x,45:d},{33:[1,164]},{33:[1,165]},{33:[1,166]},{39:167,43:f,44:x,45:d},{33:[1,168]},r(a,[2,43],{35:[1,169]}),r(a,[2,44],{38:[1,170]}),r(a,[2,42],{32:[1,171]}),r(a,[2,45],{35:[1,172]}),r(a,[2,40],{38:[1,173]}),r(a,[2,41],{32:[1,174]}),{33:[1,175],36:[1,176]},{33:[1,177]},{33:[1,178]},{33:[1,179]},{33:[1,180]},r(a,[2,66],{42:[1,181]}),r(a,[2,79],{32:[1,182]}),r(a,[2,67],{42:[1,183]}),r(a,[2,90],{38:[1,184]}),r(a,[2,80],{32:[1,185]}),r(a,[2,89],{38:[1,186]}),r(a,[2,65],{42:[1,187]}),r(a,[2,78],{32:[1,188]}),r(a,[2,64],{42:[1,189]}),r(a,[2,84],{35:[1,190]}),r(a,[2,77],{32:[1,191]}),r(a,[2,83],{35:[1,192]}),r(a,[2,63],{42:[1,193]}),r(a,[2,91],{38:[1,194]}),r(a,[2,62],{42:[1,195]}),r(a,[2,85],{35:[1,196]}),r(a,[2,86],{35:[1,197]}),r(a,[2,92],{38:[1,198]}),r(a,[2,76],{32:[1,199]}),r(a,[2,87],{38:[1,200]}),r(a,[2,75],{32:[1,201]}),r(a,[2,81],{35:[1,202]}),r(a,[2,82],{35:[1,203]}),r(a,[2,88],{38:[1,204]}),{33:[1,205]},{39:206,43:f,44:x,45:d},{33:[1,207]},{33:[1,208]},{39:209,43:f,44:x,45:d},{33:[1,210]},r(a,[2,27]),r(a,[2,32]),r(a,[2,28]),r(a,[2,33]),r(a,[2,34]),r(a,[2,35]),{33:[1,211]},{33:[1,212]},{33:[1,213]},{39:214,43:f,44:x,45:d},{33:[1,215]},{39:216,43:f,44:x,45:d},{33:[1,217]},{33:[1,218]},{33:[1,219]},{33:[1,220]},{33:[1,221]},{33:[1,222]},{33:[1,223]},{39:224,43:f,44:x,45:d},{33:[1,225]},{33:[1,226]},{33:[1,227]},{39:228,43:f,44:x,45:d},{33:[1,229]},{39:230,43:f,44:x,45:d},{33:[1,231]},{33:[1,232]},{33:[1,233]},{39:234,43:f,44:x,45:d},r(a,[2,46]),r(a,[2,48]),r(a,[2,47]),r(a,[2,49]),r(a,[2,51]),r(a,[2,50]),r(a,[2,107]),r(a,[2,108]),r(a,[2,105]),r(a,[2,106]),r(a,[2,110]),r(a,[2,109]),r(a,[2,114]),r(a,[2,113]),r(a,[2,112]),r(a,[2,111]),r(a,[2,116]),r(a,[2,115]),r(a,[2,104]),r(a,[2,103]),r(a,[2,102]),r(a,[2,101]),r(a,[2,99]),r(a,[2,100]),r(a,[2,98]),r(a,[2,97]),r(a,[2,96]),r(a,[2,95]),r(a,[2,93]),r(a,[2,94])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:function(o,u){if(!u.recoverable){var k=new Error(o);throw k.hash=u,k}this.trace(o)},parse:function(o){var k=[0],s=[],w=[null],e=[],ee=this.table,t="",ie=0,_e=0,Ze=e.slice.call(arguments,1),A=Object.create(this.lexer),U={yy:{}};for(var oe in this.yy)Object.prototype.hasOwnProperty.call(this.yy,oe)&&(U.yy[oe]=this.yy[oe]);A.setInput(o,U.yy),U.yy.lexer=A,U.yy.parser=this,typeof A.yylloc>"u"&&(A.yylloc={});var le=A.yylloc;e.push(le);var j,$e=A.options&&A.options.ranges;this.parseError="function"==typeof U.yy.parseError?U.yy.parseError:Object.getPrototypeOf(this).parseError;for(var H,q,B,he,se,z,ae,J={};;){if(this.defaultActions[q=k[k.length-1]]?B=this.defaultActions[q]:((null===H||typeof H>"u")&&(j=void 0,"number"!=typeof(j=s.pop()||A.lex()||1)&&(j instanceof Array&&(j=(s=j).pop()),j=this.symbols_[j]||j),H=j),B=ee[q]&&ee[q][H]),typeof B>"u"||!B.length||!B[0]){var me;for(se in ae=[],ee[q])this.terminals_[se]&&se>2&&ae.push("'"+this.terminals_[se]+"'");me=A.showPosition?"Parse error on line "+(ie+1)+":\n"+A.showPosition()+"\nExpecting "+ae.join(", ")+", got '"+(this.terminals_[H]||H)+"'":"Parse error on line "+(ie+1)+": Unexpected "+(1==H?"end of input":"'"+(this.terminals_[H]||H)+"'"),this.parseError(me,{text:A.match,token:this.terminals_[H]||H,line:A.yylineno,loc:le,expected:ae})}if(B[0]instanceof Array&&B.length>1)throw new Error("Parse Error: multiple actions possible at state: "+q+", token: "+H);switch(B[0]){case 1:k.push(H),w.push(A.yytext),e.push(A.yylloc),k.push(B[1]),H=null,_e=A.yyleng,t=A.yytext,ie=A.yylineno,le=A.yylloc;break;case 2:if(J.$=w[w.length-(z=this.productions_[B[1]][1])],J._$={first_line:e[e.length-(z||1)].first_line,last_line:e[e.length-1].last_line,first_column:e[e.length-(z||1)].first_column,last_column:e[e.length-1].last_column},$e&&(J._$.range=[e[e.length-(z||1)].range[0],e[e.length-1].range[1]]),typeof(he=this.performAction.apply(J,[t,_e,ie,U.yy,B[1],w,e].concat(Ze)))<"u")return he;z&&(k=k.slice(0,-1*z*2),w=w.slice(0,-1*z),e=e.slice(0,-1*z)),k.push(this.productions_[B[1]][0]),w.push(J.$),e.push(J._$),k.push(ee[k[k.length-2]][k[k.length-1]]);break;case 3:return!0}}return!0}};function S(){this.yy={}}return D.lexer={EOF:1,parseError:function(u,k){if(!this.yy.parser)throw new Error(u);this.yy.parser.parseError(u,k)},setInput:function(o,u){return this.yy=u||this.yy||{},this._input=o,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var o=this._input[0];return this.yytext+=o,this.yyleng++,this.offset++,this.match+=o,this.matched+=o,o.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),o},unput:function(o){var u=o.length,k=o.split(/(?:\r\n?|\n)/g);this._input=o+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-u),this.offset-=u;var s=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),k.length-1&&(this.yylineno-=k.length-1);var w=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:k?(k.length===s.length?this.yylloc.first_column:0)+s[s.length-k.length].length-k[0].length:this.yylloc.first_column-u},this.options.ranges&&(this.yylloc.range=[w[0],w[0]+this.yyleng-u]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(o){this.unput(this.match.slice(o))},pastInput:function(){var o=this.matched.substr(0,this.matched.length-this.match.length);return(o.length>20?"...":"")+o.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var o=this.match;return o.length<20&&(o+=this._input.substr(0,20-o.length)),(o.substr(0,20)+(o.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var o=this.pastInput(),u=new Array(o.length+1).join("-");return o+this.upcomingInput()+"\n"+u+"^"},test_match:function(o,u){var k,s,w;if(this.options.backtrack_lexer&&(w={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(w.yylloc.range=this.yylloc.range.slice(0))),(s=o[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=s.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:s?s[s.length-1].length-s[s.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+o[0].length},this.yytext+=o[0],this.match+=o[0],this.matches=o,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(o[0].length),this.matched+=o[0],k=this.performAction.call(this,this.yy,this,u,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),k)return k;if(this._backtrack){for(var e in w)this[e]=w[e];return!1}return!1},next:function(){if(this.done)return this.EOF;var o,u,k,s;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var w=this._currentRules(),e=0;e<w.length;e++)if((k=this._input.match(this.rules[w[e]]))&&(!u||k[0].length>u[0].length)){if(u=k,s=e,this.options.backtrack_lexer){if(!1!==(o=this.test_match(k,w[e])))return o;if(this._backtrack){u=!1;continue}return!1}if(!this.options.flex)break}return u?!1!==(o=this.test_match(u,w[s]))&&o:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){return this.next()||this.lex()},begin:function(u){this.conditionStack.push(u)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(u){return(u=this.conditionStack.length-1-Math.abs(u||0))>=0?this.conditionStack[u]:"INITIAL"},pushState:function(u){this.begin(u)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(u,k,s,w){switch(s){case 0:return this.begin("acc_title"),19;case 1:return this.popState(),"acc_title_value";case 2:return this.begin("acc_descr"),21;case 3:return this.popState(),"acc_descr_value";case 4:this.begin("acc_descr_multiline");break;case 5:case 30:case 34:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:case 9:break;case 10:return 5;case 11:return 40;case 12:return 32;case 13:return 38;case 14:return 42;case 15:return 43;case 16:return 44;case 17:return 45;case 18:return 35;case 19:return 28;case 20:return 29;case 21:return 37;case 22:return 31;case 23:return 34;case 24:return 26;case 25:case 26:return 9;case 27:return 8;case 28:return"CARET";case 29:this.begin("options");break;case 31:return 12;case 32:return 36;case 33:this.begin("string");break;case 35:return 33;case 36:return 30;case 37:return 46;case 38:return 7}},rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:parent:)/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[30,31],inclusive:!1},string:{rules:[34,35],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,36,37,38,39],inclusive:!0}}},S.prototype=D,D.Parser=S,new S}());ne.parser=ne;const Me=ne;let te=(0,p.c)().gitGraph.mainBranchName,Re=(0,p.c)().gitGraph.mainBranchOrder,L={},G=null,Q={};Q[te]={name:te,order:Re};let M={};M[te]=G;let O=te,fe="LR",K=0;function ce(){return(0,p.y)({length:7})}let pe={};const be=function(r){if(r=p.e.sanitizeText(r,(0,p.c)()),void 0===M[r]){let n=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+r+'")');throw n.hash={text:"checkout "+r,token:"checkout "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+r+'"']},n}O=r,G=L[M[O]]};function ge(r,n,l){const h=r.indexOf(n);-1===h?r.push(l):r.splice(h,1,l)}function de(r){const n=r.reduce((i,c)=>i.seq>c.seq?i:c,r[0]);let l="";r.forEach(function(i){l+=i===n?"\t*":"\t|"});const h=[l,n.id,n.seq];for(let i in M)M[i]===n.id&&h.push(i);if(p.l.debug(h.join(" ")),n.parents&&2==n.parents.length)ge(r,n,L[n.parents[0]]),r.push(L[n.parents[1]]);else{if(0==n.parents.length)return;ge(r,n,L[n.parents])}r=function Le(r,n){const l=Object.create(null);return r.reduce((h,i)=>{const c=n(i);return l[c]||(l[c]=!0,h.push(i)),h},[])}(r,i=>i.id),de(r)}const ke=function(){const r=Object.keys(L).map(function(n){return L[n]});return r.forEach(function(n){p.l.debug(n.id)}),r.sort((n,l)=>n.seq-l.seq),r},W={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4};let X={};let N={},V={},re=[],Z=0,R="LR";const xe=r=>{const n=document.createElementNS("http://www.w3.org/2000/svg","text");let l=[];l="string"==typeof r?r.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(r)?r:[];for(const h of l){const i=document.createElementNS("http://www.w3.org/2000/svg","tspan");i.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),i.setAttribute("dy","1em"),i.setAttribute("x","0"),i.setAttribute("class","row"),i.textContent=h.trim(),n.appendChild(i)}return n},ye=(r,n,l)=>{const h=(0,p.c)().gitGraph,i=r.append("g").attr("class","commit-bullets"),c=r.append("g").attr("class","commit-labels");let b=0;"TB"===R&&(b=30);const y=Object.keys(n).sort((E,g)=>n[E].seq-n[g].seq),_=h.parallelCommits;y.forEach(E=>{const g=n[E];if(_)if(g.parents.length){const T=(r=>{let n="",l=0;return r.forEach(h=>{const i="TB"===R?V[h].y:V[h].x;i>=l&&(n=h,l=i)}),n||void 0})(g.parents);b="TB"===R?V[T].y+40:V[T].x+40}else b=0,"TB"===R&&(b=30);const f=b+10,x="TB"===R?f:N[g.branch].pos,d="TB"===R?N[g.branch].pos:f;if(l){let T,D=void 0!==g.customType&&""!==g.customType?g.customType:g.type;switch(D){case 0:default:T="commit-normal";break;case 1:T="commit-reverse";break;case 2:T="commit-highlight";break;case 3:T="commit-merge";break;case 4:T="commit-cherry-pick"}if(2===D){const C=i.append("rect");C.attr("x",d-10),C.attr("y",x-10),C.attr("height",20),C.attr("width",20),C.attr("class",`commit ${g.id} commit-highlight${N[g.branch].index%8} ${T}-outer`),i.append("rect").attr("x",d-6).attr("y",x-6).attr("height",12).attr("width",12).attr("class",`commit ${g.id} commit${N[g.branch].index%8} ${T}-inner`)}else if(4===D)i.append("circle").attr("cx",d).attr("cy",x).attr("r",10).attr("class",`commit ${g.id} ${T}`),i.append("circle").attr("cx",d-3).attr("cy",x+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${g.id} ${T}`),i.append("circle").attr("cx",d+3).attr("cy",x+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${g.id} ${T}`),i.append("line").attr("x1",d+3).attr("y1",x+1).attr("x2",d).attr("y2",x-5).attr("stroke","#fff").attr("class",`commit ${g.id} ${T}`),i.append("line").attr("x1",d-3).attr("y1",x+1).attr("x2",d).attr("y2",x-5).attr("stroke","#fff").attr("class",`commit ${g.id} ${T}`);else{const C=i.append("circle");if(C.attr("cx",d),C.attr("cy",x),C.attr("r",3===g.type?9:10),C.attr("class",`commit ${g.id} commit${N[g.branch].index%8}`),3===D){const S=i.append("circle");S.attr("cx",d),S.attr("cy",x),S.attr("r",6),S.attr("class",`commit ${T} ${g.id} commit${N[g.branch].index%8}`)}1===D&&i.append("path").attr("d",`M ${d-5},${x-5}L${d+5},${x+5}M${d-5},${x+5}L${d+5},${x-5}`).attr("class",`commit ${T} ${g.id} commit${N[g.branch].index%8}`)}}if(V[g.id]="TB"===R?{x:d,y:f}:{x:f,y:x},l){if(4!==g.type&&(g.customId&&3===g.type||3!==g.type)&&h.showCommitLabel){const C=c.append("g"),S=C.insert("rect").attr("class","commit-label-bkg"),I=C.append("text").attr("x",b).attr("y",x+25).attr("class","commit-label").text(g.id);let o=I.node().getBBox();S.attr("x",f-o.width/2-2).attr("y",x+13.5).attr("width",o.width+4).attr("height",o.height+4),"TB"===R&&(S.attr("x",d-(o.width+16+5)).attr("y",x-12),I.attr("x",d-(o.width+16)).attr("y",x+o.height-12)),"TB"!==R&&I.attr("x",f-o.width/2),h.rotateCommitLabel&&("TB"===R?(I.attr("transform","rotate(-45, "+d+", "+x+")"),S.attr("transform","rotate(-45, "+d+", "+x+")")):C.attr("transform","translate("+(-7.5-(o.width+10)/25*9.5)+", "+(10+o.width/25*8.5)+") rotate(-45, "+b+", "+x+")"))}if(g.tag){const C=c.insert("polygon"),S=c.append("circle"),I=c.append("text").attr("y",x-16).attr("class","tag-label").text(g.tag);let o=I.node().getBBox();I.attr("x",f-o.width/2);const u=o.height/2,k=x-19.2;C.attr("class","tag-label-bkg").attr("points",`\n          ${b-o.width/2-2},${k+2}\n          ${b-o.width/2-2},${k-2}\n          ${f-o.width/2-4},${k-u-2}\n          ${f+o.width/2+4},${k-u-2}\n          ${f+o.width/2+4},${k+u+2}\n          ${f-o.width/2-4},${k+u+2}`),S.attr("cx",b-o.width/2+2).attr("cy",k).attr("r",1.5).attr("class","tag-hole"),"TB"===R&&(C.attr("class","tag-label-bkg").attr("points",`\n            ${d},${b+2}\n            ${d},${b-2}\n            ${d+10},${b-u-2}\n            ${d+10+o.width+4},${b-u-2}\n            ${d+10+o.width+4},${b+u+2}\n            ${d+10},${b+u+2}`).attr("transform","translate(12,12) rotate(45, "+d+","+b+")"),S.attr("cx",d+2).attr("cy",b).attr("transform","translate(12,12) rotate(45, "+d+","+b+")"),I.attr("x",d+5).attr("y",b+3).attr("transform","translate(14,14) rotate(45, "+d+","+b+")"))}}b+=50,b>Z&&(Z=b)})},$=(r,n,l=0)=>{const h=r+Math.abs(r-n)/2;if(l>5)return h;if(re.every(b=>Math.abs(b-h)>=10))return re.push(h),h;const c=Math.abs(r-n);return $(r,n-c/5,l+1)},We=(r,n)=>{const l=r.append("g").attr("class","commit-arrows");Object.keys(n).forEach(h=>{const i=n[h];i.parents&&i.parents.length>0&&i.parents.forEach(c=>{((r,n,l,h)=>{const i=V[n.id],c=V[l.id],b=((r,n,l,h,i)=>{const b=("TB"===R?l.x<h.x:l.y<h.y)?n.branch:r.branch;return Object.values(i).some(_=>(_=>_.seq>r.seq&&_.seq<n.seq)(_)&&(_=>_.branch===b)(_))})(n,l,i,c,h);let E,m="",y="",_=0,a=0,v=N[l.branch].index;if(3===l.type&&n.id!==l.parents[0]&&(v=N[n.branch].index),b){m="A 10 10, 0, 0, 0,",y="A 10 10, 0, 0, 1,",_=10,a=10;const g=i.y<c.y?$(i.y,c.y):$(c.y,i.y),f=i.x<c.x?$(i.x,c.x):$(c.x,i.x);"TB"===R?i.x<c.x?E=`M ${i.x} ${i.y} L ${f-_} ${i.y} ${y} ${f} ${i.y+a} L ${f} ${c.y-_} ${m} ${f+a} ${c.y} L ${c.x} ${c.y}`:(v=N[n.branch].index,E=`M ${i.x} ${i.y} L ${f+_} ${i.y} ${m} ${f} ${i.y+a} L ${f} ${c.y-_} ${y} ${f-a} ${c.y} L ${c.x} ${c.y}`):i.y<c.y?E=`M ${i.x} ${i.y} L ${i.x} ${g-_} ${m} ${i.x+a} ${g} L ${c.x-_} ${g} ${y} ${c.x} ${g+a} L ${c.x} ${c.y}`:(v=N[n.branch].index,E=`M ${i.x} ${i.y} L ${i.x} ${g+_} ${y} ${i.x+a} ${g} L ${c.x-_} ${g} ${m} ${c.x} ${g-a} L ${c.x} ${c.y}`)}else m="A 20 20, 0, 0, 0,",y="A 20 20, 0, 0, 1,",_=20,a=20,"TB"===R?(i.x<c.x&&(E=3===l.type&&n.id!==l.parents[0]?`M ${i.x} ${i.y} L ${i.x} ${c.y-_} ${m} ${i.x+a} ${c.y} L ${c.x} ${c.y}`:`M ${i.x} ${i.y} L ${c.x-_} ${i.y} ${y} ${c.x} ${i.y+a} L ${c.x} ${c.y}`),i.x>c.x&&(m="A 20 20, 0, 0, 0,",y="A 20 20, 0, 0, 1,",_=20,a=20,E=3===l.type&&n.id!==l.parents[0]?`M ${i.x} ${i.y} L ${i.x} ${c.y-_} ${y} ${i.x-a} ${c.y} L ${c.x} ${c.y}`:`M ${i.x} ${i.y} L ${c.x+_} ${i.y} ${m} ${c.x} ${i.y+a} L ${c.x} ${c.y}`),i.x===c.x&&(E=`M ${i.x} ${i.y} L ${c.x} ${c.y}`)):(i.y<c.y&&(E=3===l.type&&n.id!==l.parents[0]?`M ${i.x} ${i.y} L ${c.x-_} ${i.y} ${y} ${c.x} ${i.y+a} L ${c.x} ${c.y}`:`M ${i.x} ${i.y} L ${i.x} ${c.y-_} ${m} ${i.x+a} ${c.y} L ${c.x} ${c.y}`),i.y>c.y&&(E=3===l.type&&n.id!==l.parents[0]?`M ${i.x} ${i.y} L ${c.x-_} ${i.y} ${m} ${c.x} ${i.y-a} L ${c.x} ${c.y}`:`M ${i.x} ${i.y} L ${i.x} ${c.y+_} ${y} ${i.x+a} ${c.y} L ${c.x} ${c.y}`),i.y===c.y&&(E=`M ${i.x} ${i.y} L ${c.x} ${c.y}`));r.append("path").attr("d",E).attr("class","arrow arrow"+v%8)})(l,n[c],i,n)})})},Qe={parser:Me,db:{getConfig:()=>(0,p.c)().gitGraph,setDirection:function(r){fe=r},setOptions:function(r){p.l.debug("options str",r),r=(r=r&&r.trim())||"{}";try{pe=JSON.parse(r)}catch(n){p.l.error("error while parsing gitGraph options",n.message)}},getOptions:function(){return pe},commit:function(r,n,l,h){p.l.debug("Entering commit:",r,n,l,h),n=p.e.sanitizeText(n,(0,p.c)()),r=p.e.sanitizeText(r,(0,p.c)()),h=p.e.sanitizeText(h,(0,p.c)());const i={id:n||K+"-"+ce(),message:r,seq:K++,type:l||W.NORMAL,tag:h||"",parents:null==G?[]:[G.id],branch:O};G=i,L[i.id]=i,M[O]=i.id,p.l.debug("in pushCommit "+i.id)},branch:function(r,n){if(r=p.e.sanitizeText(r,(0,p.c)()),void 0!==M[r]){let l=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+r+'")');throw l.hash={text:"branch "+r,token:"branch "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+r+'"']},l}M[r]=null!=G?G.id:null,Q[r]={name:r,order:n?parseInt(n,10):null},be(r),p.l.debug("in createBranch")},merge:function(r,n,l,h){r=p.e.sanitizeText(r,(0,p.c)()),n=p.e.sanitizeText(n,(0,p.c)());const i=L[M[O]],c=L[M[r]];if(O===r){let m=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},m}if(void 0===i||!i){let m=new Error('Incorrect usage of "merge". Current branch ('+O+")has no commits");throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},m}if(void 0===M[r]){let m=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") does not exist");throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+r]},m}if(void 0===c||!c){let m=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") has no commits");throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},m}if(i===c){let m=new Error('Incorrect usage of "merge". Both branches have same head');throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},m}if(n&&void 0!==L[n]){let m=new Error('Incorrect usage of "merge". Commit with id:'+n+" already exists, use different custom Id");throw m.hash={text:"merge "+r+n+l+h,token:"merge "+r+n+l+h,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+r+" "+n+"_UNIQUE "+l+" "+h]},m}const b={id:n||K+"-"+ce(),message:"merged branch "+r+" into "+O,seq:K++,parents:[null==G?null:G.id,M[r]],branch:O,type:W.MERGE,customType:l,customId:!!n,tag:h||""};G=b,L[b.id]=b,M[O]=b.id,p.l.debug(M),p.l.debug("in mergeBranch")},cherryPick:function(r,n,l,h){if(p.l.debug("Entering cherryPick:",r,n,l),r=p.e.sanitizeText(r,(0,p.c)()),n=p.e.sanitizeText(n,(0,p.c)()),l=p.e.sanitizeText(l,(0,p.c)()),h=p.e.sanitizeText(h,(0,p.c)()),!r||void 0===L[r]){let b=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw b.hash={text:"cherryPick "+r+" "+n,token:"cherryPick "+r+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},b}let i=L[r],c=i.branch;if(h&&(!Array.isArray(i.parents)||!i.parents.includes(h)))throw new Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.");if(i.type===W.MERGE&&!h)throw new Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.");if(!n||void 0===L[n]){if(c===O){let y=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw y.hash={text:"cherryPick "+r+" "+n,token:"cherryPick "+r+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},y}const b=L[M[O]];if(void 0===b||!b){let y=new Error('Incorrect usage of "cherry-pick". Current branch ('+O+")has no commits");throw y.hash={text:"cherryPick "+r+" "+n,token:"cherryPick "+r+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},y}const m={id:K+"-"+ce(),message:"cherry-picked "+i+" into "+O,seq:K++,parents:[null==G?null:G.id,i.id],branch:O,type:W.CHERRY_PICK,tag:l??`cherry-pick:${i.id}${i.type===W.MERGE?`|parent:${h}`:""}`};G=m,L[m.id]=m,M[O]=m.id,p.l.debug(M),p.l.debug("in cherryPick")}},checkout:be,prettyPrint:function(){p.l.debug(L),de([ke()[0]])},clear:function(){L={},G=null;let r=(0,p.c)().gitGraph.mainBranchName,n=(0,p.c)().gitGraph.mainBranchOrder;M={},M[r]=null,Q={},Q[r]={name:r,order:n},O=r,K=0,(0,p.v)()},getBranchesAsObjArray:function(){return Object.values(Q).map((n,l)=>null!==n.order?n:{...n,order:parseFloat(`0.${l}`,10)}).sort((n,l)=>n.order-l.order).map(({name:n})=>({name:n}))},getBranches:function(){return M},getCommits:function(){return L},getCommitsArray:ke,getCurrentBranch:function(){return O},getDirection:function(){return fe},getHead:function(){return G},setAccTitle:p.s,getAccTitle:p.g,getAccDescription:p.a,setAccDescription:p.b,setDiagramTitle:p.q,getDiagramTitle:p.t,commitType:W},renderer:{draw:function(r,n,l,h){N={},V={},X={},Z=0,re=[],R="LR";const i=(0,p.c)(),c=i.gitGraph;p.l.debug("in gitgraph renderer",r+"\n","id:",n,l),X=h.db.getCommits();const b=h.db.getBranchesAsObjArray();R=h.db.getDirection();const m=(0,we.Ys)(`[id="${n}"]`);let y=0;b.forEach((_,a)=>{const v=xe(_.name),E=m.append("g"),g=E.insert("g").attr("class","branchLabel"),f=g.insert("g").attr("class","label branch-label");f.node().appendChild(v);let x=v.getBBox();N[_.name]={pos:y,index:a},y+=50+(c.rotateCommitLabel?40:0)+("TB"===R?x.width/2:0),f.remove(),g.remove(),E.remove()}),ye(m,X,!1),c.showBranches&&((r,n)=>{const l=(0,p.c)().gitGraph,h=r.append("g");n.forEach((i,c)=>{const b=c%8,m=N[i.name].pos,y=h.append("line");y.attr("x1",0),y.attr("y1",m),y.attr("x2",Z),y.attr("y2",m),y.attr("class","branch branch"+b),"TB"===R&&(y.attr("y1",30),y.attr("x1",m),y.attr("y2",Z),y.attr("x2",m)),re.push(m);const a=xe(i.name),v=h.insert("rect"),g=h.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+b);g.node().appendChild(a);let f=a.getBBox();v.attr("class","branchLabelBkg label"+b).attr("rx",4).attr("ry",4).attr("x",-f.width-4-(!0===l.rotateCommitLabel?30:0)).attr("y",-f.height/2+8).attr("width",f.width+18).attr("height",f.height+4),g.attr("transform","translate("+(-f.width-14-(!0===l.rotateCommitLabel?30:0))+", "+(m-f.height/2-1)+")"),"TB"===R&&(v.attr("x",m-f.width/2-10).attr("y",0),g.attr("transform","translate("+(m-f.width/2-5)+", 0)")),"TB"!==R&&v.attr("transform","translate(-19, "+(m-f.height/2)+")")})})(m,b),We(m,X),ye(m,X,!0),p.u.insertTitle(m,"gitTitleText",c.titleTopMargin,h.db.getDiagramTitle()),(0,p.z)(void 0,m,c.diagramPadding,c.useMaxWidth??i.useMaxWidth)}},styles:r=>`\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ${[0,1,2,3,4,5,6,7].map(n=>`\n        .branch-label${n} { fill: ${r["gitBranchLabel"+n]}; }\n        .commit${n} { stroke: ${r["git"+n]}; fill: ${r["git"+n]}; }\n        .commit-highlight${n} { stroke: ${r["gitInv"+n]}; fill: ${r["gitInv"+n]}; }\n        .label${n}  { fill: ${r["git"+n]}; }\n        .arrow${n} { stroke: ${r["git"+n]}; }\n        `).join("\n")}\n\n  .branch {\n    stroke-width: 1;\n    stroke: ${r.lineColor};\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelColor};}\n  .commit-label-bkg { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelBackground}; opacity: 0.5; }\n  .tag-label { font-size: ${r.tagLabelFontSize}; fill: ${r.tagLabelColor};}\n  .tag-label-bkg { fill: ${r.tagLabelBackground}; stroke: ${r.tagLabelBorder}; }\n  .tag-hole { fill: ${r.textColor}; }\n\n  .commit-merge {\n    stroke: ${r.primaryColor};\n    fill: ${r.primaryColor};\n  }\n  .commit-reverse {\n    stroke: ${r.primaryColor};\n    fill: ${r.primaryColor};\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ${r.primaryColor};\n    fill: ${r.primaryColor};\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${r.textColor};\n  }\n`}}}]);