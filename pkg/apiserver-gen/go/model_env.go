/*
 * odo dev
 *
 * API interface for 'odo dev'
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Env struct {
	Name string `json:"name"`

	Value string `json:"value"`
}

// AssertEnvRequired checks if the required fields are not zero-ed
func AssertEnvRequired(obj Env) error {
	elements := map[string]interface{}{
		"name":  obj.Name,
		"value": obj.Value,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseEnvRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Env (e.g. [][]Env), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseEnvRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aEnv, ok := obj.(Env)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertEnvRequired(aEnv)
	})
}
