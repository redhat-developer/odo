/*
 * odo dev
 *
 * API interface for 'odo dev'
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type DevstateQuantityValidPostRequest struct {
	Quantity string `json:"quantity"`
}

// AssertDevstateQuantityValidPostRequestRequired checks if the required fields are not zero-ed
func AssertDevstateQuantityValidPostRequestRequired(obj DevstateQuantityValidPostRequest) error {
	elements := map[string]interface{}{
		"quantity": obj.Quantity,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseDevstateQuantityValidPostRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DevstateQuantityValidPostRequest (e.g. [][]DevstateQuantityValidPostRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDevstateQuantityValidPostRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDevstateQuantityValidPostRequest, ok := obj.(DevstateQuantityValidPostRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDevstateQuantityValidPostRequestRequired(aDevstateQuantityValidPostRequest)
	})
}
