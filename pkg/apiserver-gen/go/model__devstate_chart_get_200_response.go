/*
 * odo dev
 *
 * API interface for 'odo dev'
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type DevstateChartGet200Response struct {

	// chart in mermaid format
	Chart string `json:"chart"`
}

// AssertDevstateChartGet200ResponseRequired checks if the required fields are not zero-ed
func AssertDevstateChartGet200ResponseRequired(obj DevstateChartGet200Response) error {
	elements := map[string]interface{}{
		"chart": obj.Chart,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseDevstateChartGet200ResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DevstateChartGet200Response (e.g. [][]DevstateChartGet200Response), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDevstateChartGet200ResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDevstateChartGet200Response, ok := obj.(DevstateChartGet200Response)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDevstateChartGet200ResponseRequired(aDevstateChartGet200Response)
	})
}
