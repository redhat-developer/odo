/*
 * odo dev
 *
 * API interface for 'odo dev'
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type TelemetryResponse struct {
	Enabled bool `json:"enabled"`

	Apikey string `json:"apikey,omitempty"`

	Userid string `json:"userid,omitempty"`
}

// AssertTelemetryResponseRequired checks if the required fields are not zero-ed
func AssertTelemetryResponseRequired(obj TelemetryResponse) error {
	elements := map[string]interface{}{
		"enabled": obj.Enabled,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseTelemetryResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TelemetryResponse (e.g. [][]TelemetryResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTelemetryResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTelemetryResponse, ok := obj.(TelemetryResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTelemetryResponseRequired(aTelemetryResponse)
	})
}
