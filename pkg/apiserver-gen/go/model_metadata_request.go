/*
 * odo dev
 *
 * API interface for 'odo dev'
 *
 * API version: 0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type MetadataRequest struct {
	Name string `json:"name,omitempty"`

	Version string `json:"version,omitempty"`

	DisplayName string `json:"displayName,omitempty"`

	Description string `json:"description,omitempty"`

	Tags string `json:"tags,omitempty"`

	Architectures string `json:"architectures,omitempty"`

	Icon string `json:"icon,omitempty"`

	GlobalMemoryLimit string `json:"globalMemoryLimit,omitempty"`

	ProjectType string `json:"projectType,omitempty"`

	Language string `json:"language,omitempty"`

	Website string `json:"website,omitempty"`

	Provider string `json:"provider,omitempty"`

	SupportUrl string `json:"supportUrl,omitempty"`
}

// AssertMetadataRequestRequired checks if the required fields are not zero-ed
func AssertMetadataRequestRequired(obj MetadataRequest) error {
	return nil
}

// AssertRecurseMetadataRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of MetadataRequest (e.g. [][]MetadataRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseMetadataRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aMetadataRequest, ok := obj.(MetadataRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertMetadataRequestRequired(aMetadataRequest)
	})
}
