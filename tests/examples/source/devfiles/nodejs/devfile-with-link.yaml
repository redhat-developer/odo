commands:
- exec:
    commandLine: npm install
    component: runtime
    group:
      isDefault: true
      kind: build
    workingDir: /project
  id: install
- exec:
    commandLine: npm start
    component: runtime
    group:
      isDefault: true
      kind: run
    workingDir: /project
  id: run
- exec:
    commandLine: npm run debug
    component: runtime
    group:
      isDefault: true
      kind: debug
    workingDir: /project
  id: debug
- exec:
    commandLine: npm test
    component: runtime
    group:
      isDefault: true
      kind: test
    workingDir: /project
  id: test
components:
- container:
    endpoints:
    - name: http-3000
      targetPort: 3000
    image: registry.access.redhat.com/ubi8/nodejs-14:latest
    memoryLimit: 300Mi
    mountSources: true
    sourceMapping: /project
  name: runtime
- kubernetes:
    inlined: |
      apiVersion: redis.redis.opstreelabs.in/v1beta1
      kind: Redis
      metadata:
        name: myredis
        annotations:
          service.binding/name: path={.metadata.name}
      spec:
        redisExporter:
          enabled: true
          image: 'quay.io/opstree/redis-exporter:1.0'
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi
        kubernetesConfig:
          image: 'quay.io/opstree/redis:v6.2'
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 101m
              memory: 128Mi
            limits:
              cpu: 101m
              memory: 128Mi
          redisSecret:
            name: redis-secret
            key: password
          serviceType: LoadBalancer
        redisConfig: {}
        storage:
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
  name: myredis
- kubernetes:
    inlined: |
      apiVersion: binding.operators.coreos.com/v1alpha1
      kind: ServiceBinding
      metadata:
        creationTimestamp: null
        name: redis-link
      spec:
        application:
          group: apps
          name: api-app
          resource: deployments
          version: v1
        bindAsFiles: true
        detectBindingResources: true
        services:
        - group: redis.redis.opstreelabs.in
          kind: Redis
          name: myredis
          version: v1beta1
      status:
        secret: ""
  name: redis-link
metadata:
  description: Stack with Node.js 14
  displayName: Node.js Runtime
  language: nodejs
  name: nodejs
  projectType: nodejs
  tags:
  - NodeJS
  - Express
  - ubi8
  version: 1.0.1
schemaVersion: 2.0.0
starterProjects:
- git:
    remotes:
      origin: https://github.com/odo-devfiles/nodejs-ex.git
  name: nodejs-starter
