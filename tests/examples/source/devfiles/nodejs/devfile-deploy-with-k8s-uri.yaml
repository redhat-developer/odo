schemaVersion: 2.2.0
metadata:
  description: Stack with Node.js 16
  displayName: Node.js Runtime
  icon: https://nodejs.org/static/images/logos/nodejs-new-pantone-black.svg
  language: javascript
  name: nodejs-prj1-api-abhz
  projectType: nodejs
  tags:
    - NodeJS
    - Express
    - ubi8
  version: 1.0.1

starterProjects:
  - git:
      remotes:
        origin: https://github.com/odo-devfiles/nodejs-ex.git
    name: nodejs-starter

variables:
  CONTAINER_IMAGE: quay.io/unknown-account/myimage

commands:
- exec:
    commandLine: npm install
    component: runtime
    group:
      isDefault: true
      kind: build
    workingDir: $PROJECT_SOURCE
  id: install
- exec:
    commandLine: npm start
    component: runtime
    group:
      isDefault: true
      kind: run
    workingDir: $PROJECT_SOURCE
  id: run
- exec:
    commandLine: npm run debug
    component: runtime
    group:
      isDefault: true
      kind: debug
    workingDir: $PROJECT_SOURCE
  id: debug
- exec:
    commandLine: npm test
    component: runtime
    group:
      isDefault: true
      kind: test
    workingDir: $PROJECT_SOURCE
  id: test
- id: build-image
  apply:
    component: outerloop-build
- id: deployk8s
  apply:
    component: outerloop-deploy
- id: deploy
  composite:
    commands:
      - build-image
      - deployk8s
    group:
      kind: deploy
      isDefault: true

components:
- name: runtime
  container:
    endpoints:
    - name: http-3000
      targetPort: 3000
    image: registry.access.redhat.com/ubi8/nodejs-16-minimal:latest
    memoryLimit: 1024Mi
    mountSources: true
    sourceMapping: $PROJECT_SOURCE
- name: outerloop-build
  image:
    imageName: "{{CONTAINER_IMAGE}}"
    dockerfile:
      uri: ./Dockerfile
- name: outerloop-deploy
  kubernetes:
    uri: 'kubernetes/devfile-deploy-with-k8s-uri/outerloop-deployment.yaml'
